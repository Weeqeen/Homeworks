{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Weeqeen/Homeworks/blob/main/%D0%9F%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B0%20%E2%84%963\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "ФИО"
      ],
      "metadata": {
        "id": "phMKaFq3DN13"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3CWpaI7SDK8t"
      },
      "outputs": [],
      "source": [
        "Сбродов Илья Андреевич"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**Во всей практике нельзя применять библиотеки предоставляющие готовые решения!**"
      ],
      "metadata": {
        "id": "jyIy3GOgFOCe"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Задача 1.**\n"
      ],
      "metadata": {
        "id": "XizmlL1RK2t3"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "Типы данных Напишите программу на Python, которая принимает список чисел в качестве входных данных от пользователя, а затем выводит сумму, среднее значение и максимальное значение из списка.\n",
        "\n",
        "***Нельзя использовать: len(), min(), max(), average(), sum()***\n",
        "\n",
        "Дано:\n",
        "```\n",
        "1 2 3 4 5 6 7\n",
        "```\n",
        "Вывод:\n",
        "\n",
        "```\n",
        "Сумма чисел: 28\n",
        "Среднее арифм.: 4.0\n",
        "Максимальное значение: 7\n",
        "```\n",
        "\n"
      ],
      "metadata": {
        "id": "p0v6KtHTFKSd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "lists = list((input()).split())\n",
        "summ, lenght, maxim = 0, 0, 0\n",
        "for i in lists:\n",
        "    summ += int(i)\n",
        "    lenght += 1\n",
        "    if maxim <= int(i):\n",
        "        maxim = int(i)\n",
        "sr_arifm = summ/lenght\n",
        "print(summ)\n",
        "print(sr_arifm)\n",
        "print(maxim)"
      ],
      "metadata": {
        "id": "0e1Virl0FpF6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9d5aa7e2-d9f2-4479-862c-fb5aab3d7294"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1 2 3 4 5 6 7\n",
            "28\n",
            "4.0\n",
            "7\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Задача 2.**"
      ],
      "metadata": {
        "id": "uFluc5OSK0NH"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "Напишите программу на Python, которая принимает список слов в качестве входных данных от пользователя, а затем распечатывает список в обратном порядке.\n",
        "\n",
        "Ввод:\n",
        "\n",
        "```\n",
        "апельсин мандарин яблоко\n",
        "```\n",
        "\n",
        "Вывод:\n",
        "\n",
        "```\n",
        "яблоко мандарин апельсин\n",
        "```"
      ],
      "metadata": {
        "id": "6T8vg324GG4Z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "string = (input(\"Введите строке, которую хотите развернуть: \").split())[::-1]\n",
        "string_reverse = [i for i in string]\n",
        "print(\" \".join(string_reverse))"
      ],
      "metadata": {
        "id": "v3AWj4ufGKox",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "a170b78a-2b79-4fe7-bb3e-eab3b5ee136e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Введите строке, которую хотите развернуть: апельсин мандарин яблоко\n",
            "яблоко мандарин апельсин\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Задача 3**"
      ],
      "metadata": {
        "id": "D1KkCxtIKxRx"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Простой чат-бот\n",
        "Создайте простого чат-бота, который отвечает на основные запросы пользователей. Программа должна использовать условные выражения для определения намерений пользователя и последующего соответствующего ответа.\n",
        "\n",
        "Чат бот может:\n",
        "\n",
        "- помогать складывать числа\n",
        "- подсказывать фильм, музыку и тд (из заранее созданного списка)\n",
        "- создавать список дел (а также выводить его, обновлять, очищать)\n",
        "\n",
        "Интерфейс чат-бота на ваше усмотрение, это могут быть как заранее определенные команды, так и к примеру вызов команды по номеру\n",
        "\n",
        "*Реализовать без использования функций*\n",
        "\n",
        "Пример:\n",
        "\n",
        "Ввод:\n",
        "\n",
        "```\n",
        "Олег, какую мызыку посоветуешь?\n",
        "```\n",
        "\n",
        "Вывод:\n",
        "\n",
        "```\n",
        "Я бы посоветовал вам: Led Zeppelin Stairway to Heaven\n",
        "```"
      ],
      "metadata": {
        "id": "Yq8Jgb9yHvSi"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from random import *\n",
        "music = [\"Led Zeppelin Stairway to Heaven\", \"That's where I am\", \"As it was\", \"Happy ending\", \"Til you can't\", \"Snow on the beach\",  \"Bath song\", \"Gangnam Style\"]\n",
        "films = [\"Трасса 60\", \"Борат\", \"Астрал\", \"Убежище дьявола\", \"Зелёная миля\", \"Зелёный слоник\", \"Не дыши\", \"1+1\", \"Интерстеллар\", \"Мир Юрского Периода\"]\n",
        "zapros = input(\"Введите номер вашего запроса для бота:\\n1 - Сложить числа;\\n2 - подсказать фильм, музыку и т.д(из заранее созданного списка);\\n3 - Создать список дел.\\nВаш запрос: \")\n",
        "if zapros == \"1\":\n",
        "    numbers = list(input(\"Введите числа, которые хотите просуммировать через пробел: \").split())\n",
        "    summ = 0\n",
        "    for i in numbers:\n",
        "       summ += int(i)\n",
        "    print(\"Ваша сумма:\",summ)\n",
        "elif zapros == \"2\":\n",
        "    chooice = input(\"Введите, что вам нужно подсказать(Фильм или Музыка) с заглавной буквы: \")\n",
        "    if chooice == \"Фильм\":\n",
        "        print(\"Я бы посоветовал вам фильм:\", choice(films))\n",
        "    elif chooice == \"Музыка\":\n",
        "        print(\"Я бы посоветовал вам музыку:\", choice(music))\n",
        "elif zapros == \"3\":\n",
        "    cnt = int(input(\"Введите количество действий, которые вы хотите произвести со своим списком дел: \"))\n",
        "    to_do_list = []\n",
        "    for i in range(cnt):\n",
        "        operation = input(\"Введите действие, которое хотите произвести со своим списком дел: \\n1 - Вывести список дел;\\n2 - Обновить список дел;\\n3 - Очистить список дел.\\nВаше действие: \")\n",
        "        if operation == \"1\":\n",
        "            print(\"Список ваших дел:\",\", \".join(to_do_list))\n",
        "        elif operation == \"2\":\n",
        "            to_do_list.append(input(\"Введите дело, которое хотите добавить в список дел: \"))\n",
        "        elif operation == \"3\":\n",
        "            to_do_list.clear()\n",
        "else:\n",
        "    print(\"Запустите программу заново и введите запрос правильно!!!\")\n",
        "\n"
      ],
      "metadata": {
        "id": "fmW-tmUtINN9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3149de82-a29a-411c-c814-f1b6ab422e54"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Введите номер вашего запроса для бота(1 - Сложить числа; 2 - подсказать фильм, музыку и т.д(из заранее созданного списка; 3 - Создать список дел): 2\n",
            "Введите, что вам нужно подсказать(Фильмы или Музыку) с заглавной буквы: Фильм\n",
            "Я бы посоветовал вам: Убежище дьявала\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Задача 4.**\n"
      ],
      "metadata": {
        "id": "PHXBfyc6Ko7D"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Камень, ножницы, бумага\n",
        "\n",
        "Создайте игру в Камень, ножницы, бумагу, в которой пользователь может играть против компьютера. Программа должна запросить выбор пользователя, а затем сгенерировать выбор компьютера. Затем программа должна определить победителя на основе правил игры.\n",
        "\n",
        "**Этап 1:**\n",
        "\n",
        "Определение победителя\n",
        "\n",
        "**Этап 2:**\n",
        "  \n",
        "Игра до 3 побед\n",
        "\n",
        "\n",
        "Ввод для \"Этап 1\":\n",
        "\n",
        "```\n",
        "Камень\n",
        "```\n",
        "\n",
        "Вывод:\n",
        "\n",
        "```\n",
        "Компьютер: Ножницы\n",
        "Игрок: Камень\n",
        "Победа: Игрок\n",
        "```"
      ],
      "metadata": {
        "id": "jnKWeYleI0j6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from random import *\n",
        "game = [\"Камень\", \"Ножницы\", \"Бумага\"]\n",
        "count_win = input(\"Введите количество побед, до которых вы будете играть(1/3): \")\n",
        "if count_win == \"1\":\n",
        "    your = input(\"Введите ваш выбор из списка Камень/Ножницы/Бумага: \")\n",
        "    comp = choice(game)\n",
        "    print(\"Игрок:\", your)\n",
        "    print(\"Компьютер:\", comp)\n",
        "    if your == \"Камень\":\n",
        "        if comp == \"Камень\":\n",
        "            print(\"У вас ничья\")\n",
        "        if comp == \"Ножницы\":\n",
        "            print(\"Победа: Игрок\")\n",
        "        elif comp == \"Бумага\":\n",
        "            print(\"Победа: Компьютер\")\n",
        "    if your == \"Ножницы\":\n",
        "        if comp == \"Ножницы\":\n",
        "            print(\"У вас ничья\")\n",
        "        if comp == \"Бумага\":\n",
        "            print(\"Победа: Игрок\")\n",
        "        elif comp == \"Камень\":\n",
        "            print(\"Победа: Компьютер\")\n",
        "    if your == \"Бумага\":\n",
        "        if comp == \"Бумага\":\n",
        "            print(\"У вас ничья\")\n",
        "        if comp == \"Камень\":\n",
        "            print(\"Победа: Игрок\")\n",
        "        elif comp == \"Ножницы\":\n",
        "            print(\"Победа: Компьютер\")\n",
        "elif count_win == \"3\":\n",
        "    win_your, win_comp = 0, 0\n",
        "    while win_your != 3 and win_comp != 3:\n",
        "        print(\"Вы\", win_your, \":\", win_comp, \"Комп\")\n",
        "        your = input(\"Введите ваш выбор из списка Камень/Ножницы/Бумага: \")\n",
        "        comp = choice(game)\n",
        "        print(\"Игрок:\", your)\n",
        "        print(\"Компьютер:\", comp)\n",
        "        if win_your != 3 and win_comp != 3:\n",
        "            if your == \"Камень\":\n",
        "                if comp == \"Ножницы\":\n",
        "                    win_your += 1\n",
        "                elif comp == \"Бумага\":\n",
        "                    win_comp += 1\n",
        "            if your == \"Ножницы\":\n",
        "                if comp == \"Бумага\":\n",
        "                    win_your += 1\n",
        "                elif comp == \"Камень\":\n",
        "                    win_comp += 1\n",
        "            if your == \"Бумага\":\n",
        "                if comp == \"Камень\":\n",
        "                    win_your += 1\n",
        "                elif comp == \"Ножницы\":\n",
        "                    win_comp += 1\n",
        "    if win_your == 3:\n",
        "        print(\"Вы победили!!\")\n",
        "    else:\n",
        "        print(\"Компьютер победил\")"
      ],
      "metadata": {
        "id": "ooIPCRe_JHkX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "251a45b1-ef90-43a3-a822-8799496e066a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Введите количество побед, до которых вы будете играть(1/3): 3\n",
            "Вы 0 : 0 Комп\n",
            "Введите ваш выбор из списка Камень/Ножницы/Бумага: Бумага\n",
            "Игрок: Бумага\n",
            "Компьютер: Бумага\n",
            "Вы 0 : 0 Комп\n",
            "Введите ваш выбор из списка Камень/Ножницы/Бумага: Камень\n",
            "Игрок: Камень\n",
            "Компьютер: Ножницы\n",
            "Вы 1 : 0 Комп\n",
            "Введите ваш выбор из списка Камень/Ножницы/Бумага: Бумага\n",
            "Игрок: Бумага\n",
            "Компьютер: Бумага\n",
            "Вы 1 : 0 Комп\n",
            "Введите ваш выбор из списка Камень/Ножницы/Бумага: Ножницы\n",
            "Игрок: Ножницы\n",
            "Компьютер: Камень\n",
            "Вы 1 : 1 Комп\n",
            "Введите ваш выбор из списка Камень/Ножницы/Бумага: Камень\n",
            "Игрок: Камень\n",
            "Компьютер: Ножницы\n",
            "Вы 2 : 1 Комп\n",
            "Введите ваш выбор из списка Камень/Ножницы/Бумага: Бумага\n",
            "Игрок: Бумага\n",
            "Компьютер: Ножницы\n",
            "Вы 2 : 2 Комп\n",
            "Введите ваш выбор из списка Камень/Ножницы/Бумага: Камень\n",
            "Игрок: Камень\n",
            "Компьютер: Бумага\n",
            "Компьютер победил\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Задача 5.**"
      ],
      "metadata": {
        "id": "Hg4FJNFbLHQO"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Создайте игру \"Палач\" или \"Виселица\", в которой пользователь должен угадать слово, предлагая буквы. Программа должна выбрать случайное слово, а затем разрешить пользователю угадывать буквы. После каждого угадывания программа должна сообщать пользователю, есть ли в слове буква или нет.\n",
        "\n",
        "**Этап 1**\n",
        "Создать саму игру\n",
        "\n",
        "**Этап 2:**\n",
        "Ввести подсчет количества очков и ограничения на попытки\n",
        "\n",
        "**Этап 3:** Добавить возможность сразу угадать слово"
      ],
      "metadata": {
        "id": "OHqj3HJuLJgY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "\n",
        "\n",
        "words = ['питон', 'урфу', 'ртф', 'программирование']\n",
        "\n",
        "secret_word = random.choice(words)\n",
        "displayed = ['_'] * len(secret_word)\n",
        "attempts = 10\n",
        "\n",
        "print('Добро пожаловать в игру \"Виселица\"!')\n",
        "\n",
        "while attempts > 0 and '_' in displayed:\n",
        "    print('\\nСлово: ', ' '.join(displayed))\n",
        "    print(f'Осталось попыток: {attempts}')\n",
        "    zapros = input(\"Можете ли вы ввести слово целиком?\\n(Да/Нет): \")\n",
        "    if zapros == (\"Да\"):\n",
        "        slovo = input(\"Введите данное слово: \")\n",
        "        if slovo == secret_word:\n",
        "            displayed.clear()\n",
        "        else:\n",
        "            break\n",
        "    else:\n",
        "        guess = input('Введите букву: ').lower()\n",
        "\n",
        "        if len(guess) != 1 or not guess.isalpha():\n",
        "            print('Пожалуйста, введите одну букву алфавита.')\n",
        "            continue\n",
        "\n",
        "        if guess in secret_word:\n",
        "            for i, letter in enumerate(secret_word):\n",
        "                if letter == guess:\n",
        "                    displayed[i] = letter\n",
        "        else:\n",
        "            print('Неверно! Такой буквы нет в слове.')\n",
        "            attempts -= 1\n",
        "\n",
        "        if guess in displayed:\n",
        "            print('Вы угадали эту букву.')\n",
        "\n",
        "if '_' not in displayed:\n",
        "    print('\\nПоздравляем, вы угадали слово!')\n",
        "else:\n",
        "    print('\\nК сожалению, ваши попытки закончились/Вы назвали слово неправильно. Игра окончена.')\n",
        "\n",
        "print(f'Секретное слово было: \"{secret_word}\"')"
      ],
      "metadata": {
        "id": "0N2zCYwVLiIw",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7d40c930-91cc-4764-92c3-188582222918"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Добро пожаловать в игру \"Виселица\"!\n",
            "\n",
            "Слово:  _ _ _ _ _\n",
            "Осталось попыток: 10\n",
            "Можете ли вы ввести слово целиком?\n",
            "(Да/Нет): Да\n",
            "Введите данное слово: питон\n",
            "\n",
            "Поздравляем, вы угадали слово!\n",
            "Секретное слово было: \"питон\"\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Дополнительно: Задача 6.**\n"
      ],
      "metadata": {
        "id": "w0x3QFGzKtDD"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "**Цифра на определенном месте:**\n",
        "\n",
        "Последовательно записан натуральный ряд чисел.\n",
        "\n",
        "Какая цифра стоит в N позиции\n",
        "\n",
        "\n",
        "Вввод:\n",
        "\n",
        "```\n",
        "Введите номер позиции: 1234567890\n",
        "```\n",
        "\n",
        "Вывод:\n",
        "\n",
        "```\n",
        "8\n",
        "```"
      ],
      "metadata": {
        "id": "QqZArcpHJxVj"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "LwjYwBGcKiJ9"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
