# -*- coding: utf-8 -*-
"""Копия Практика 0.9.0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10QdyyhNY6UiU-pBq4VDNyQ0bZ4dn2yIM

ФИО
"""

Сбродов Илья Андреевич

"""# Дисклеймер

В данной практике вам необходимо применить все ваши знания по темам:

- Функции
- Словари
- Списки
- Множества
- Условные конструкции
- Запросы

и все что было изучено на прошлых практических занятиях

В каждом задании кратко описаны функции, которые необходимо реализовать, детали реализации вы должны продумать самостоятельно

# Задание 0

Создайте функцию по нахождению уникальных элементов из двух списков



```
a = [1, 2, 3, 4]
b = [3, 4, 5, 6]
```
"""

def union(a, b):
    list1 = []
    for i in a:
        if i not in list1:
            list1.append(i)
    for y in b:
        if y not in list1:
            list1.append(y)
    return list1


a = [1, 2, 3, 4]
b = [3, 4, 5, 6]
print(union(a,b))

"""# Задание 1

Симулятор виртуального питомца

Цель: создать виртуальный симулятор домашних животных, в котором пользователи смогут заводить питомцев и ухаживать за ними.

Требования:

- Функция для усыновления питомца (имя, тип, возраст).
- Функция для того, чтобы покормить питомца, поиграть с ним или уложить его спать.
- Функция для отображения состояния питомца (голод, радость, энергия).
"""

def adoption(info):
    pet = {}
    pet["Имя"] = info[0]
    pet["Тип"] = info[1]
    pet["Возраст"] = info[2]
    return pet


def interaction(pet, list_of_state):
    """Это виртуальный симулятор домашних животных, в котором вы можете создать питомца, покормить его, поиграть с ним, а также уложить его спать.
    В самом начале идёт автоматическое создание питомца, где вы вводите имя, тип и возраст.
    У питомца имеется состояние, которое включает в себя голод, радость и энергию."""
    action_1 = input(f"Введите действие, которое вы хотите произвести с питомцем:\n1 - Вывести информацию о питомце;\n2 - Взаимодействие с ним;\n3 - Выйти с симулятора.\тВаш ответ: ")
    if action_1 == "1":
        print(f"Информация о вашем питомце: {pet};\nСтатистика вашего питомца: {list_of_state}")
    if action_1 == "2":
        str1 = """Action - действие, которое вы будете производить с питомцем.
1 - Покормить;
2 - Поиграть;
3 - Уложить спать.
Ваш ответ: """
        action = input(str1)
        if action == "1":
            if list_of_state["Голод"] < 100:
                list_of_state["Голод"] += 10
                print("Вы покормили питомца.")
            else:
                print("Ваш питомец не хочет кушать.")
        if action == "2":
            if list_of_state["Голод"] > 30:
                list_of_state["Голод"] -= 50
                list_of_state["Энергия"] -= 50
                list_of_state["Радость"] += 30
                print(f'Вы поиграли с питомцем {pet["Имя"]}.')
            else:
                print("Питомец не хочет играть")
        if action == "3":
            if  list_of_state["Энергия"] < 30:
                list_of_state["Радость"] -= 50
                print(f'Вы уложили своего питомца поспать.')
            else:
                print("Ваш питомец не хочет спать.")
    if action_1 == "3":
        break

info = input("Введите имя питомца, его тип и возраст: ").split(", ")
pet = adoption(info)
hungry, joy, energy = 100, 100, 100
list_of_state = {}
list_of_state["Голод"], list_of_state["Радость"], list_of_state["Энергия"] = 100, 100, 100

while True:
    interaction(pet, list_of_state)


#Макс, кот, 13 лет

"""# Задание 2

Рыцарь и дракон

Цель: создать небольшую игру, в которой вам необходимо играть за рыцаря и сразиться с драконом

Требования:

- Создание персонажа (имя, информация о доспехах, оружии, урон, здоровье)
- Управление персонажем и мини сюжет
- Создание дракона (Имя, информация о здоровье и уроне)
- Боевая система (нанесение и получение урона, урон должен быть случайным в заданном диапазоне)
- Реализовать бой между драконом и рыцарем
"""

from random import *


def knight_creation(str1):
    damage = randint(50, 80)
    health = randint(300, 500)
    info = {}
    info["Имя"], info["Доспехи"], info["Оружие"] = str1.split(", ")
    info["Урон"], info["Здоровье"] = damage, health
    return(info)


def dragon_creation(name):
    info = {}
    damage = randint(75, 100)
    health = randint(300, 750)
    info["Имя"], info["Урон"], info["Здоровье"] = name, damage, health
    return(info)

def war():
    while dragon["Здоровье"] > 0 and knight["Здоровье"] > 0:
        war = input(f"Введите действие, которое в этом раунде будет делать рыцарь\nзащита(при защите есть шанс 1 к 3, что урон дракона не пройдёт по рыцарю)\nатака\nубежать\nВаш выбор: ")
        if war == "атака":
            numb = randint(1,10)
            if numb == 5:
                dragon["Здоровье"] = 0
                print("Дракон умер, так как на него упал метеорит. Вы спасли деревню и стали героем!!!")
            else:
                dragon["Здоровье"] -= knight["Урон"]
                knight["Здоровье"] -= dragon["Урон"]
                print(f'Здоровье дракона - {dragon["Здоровье"]}, здоровье рыцаря - {knight["Здоровье"]}.')
        elif war == "защита":
            numb = randint(1,3)
            if numb == 3:
                print("Дракон не смог пробить вашу защиту, здоровье остаётся прежним.")
            else:
                knight["Здоровье"] -= dragon["Урон"]
                print(f'Здоровье дракона - {dragon["Здоровье"]}, здоровье рыцаря - {knight["Здоровье"]}.')
        elif war == "убежать":
            print("Вы испугались дракона и убежали, оставив деревню в опастности...")
        if knight["Здоровье"] < 0:
            print("Вы проиграли, дракон победил...")
            break
        elif dragon["Здоровье"] < 0:
            print("Вы победили, дракон проиграл!!!")
            break


str1 = input("Введите через запятую информацию о рыцаре(имя, информация о доспехах, оружии): ")#Рыцарь, Золотые доспехи, Меч
knight = knight_creation(str1)
name = input("Введите имя дракона: ")#Дракон
dragon = dragon_creation(name)
while dragon["Здоровье"] > 0 and knight["Здоровье"] > 0:
    """Это небольшая игра, в которой вам необходимо играть за рыцаря и сразиться с драконом.
    В самом начале автоматически создаются рыцарь и дракон.
    Дальше будет проиходить сюжет, которым вы будете управлять.
    Вы играете за рыцарь, цель которого победить дракона и спасти свою деревню от вторжения дракона.
    В маленьком королевстве жил смелый рыцарь. Одной ночью на его деревню напал ужасный дракон, унося стада и пугая жителей.
    Рыцарь решил остановить чудовище и отправился в горы, где жил дракон."""
    str1 = input(f"У вас выбор пойти налево, направо, прямо или сразу к логову дракона:\nВаш выбор: ")
    if str1 == "направо":
        knight["Здоровье"] = knight["Здоровье"]+250
        print(f'Рыцарь пошёл направо, найдя небольшую деревню, где получили хлеб с маслом и ваше здоровье увеличилось на 250 единиц и стало равным {knight["Здоровье"]}')
        str2 = input(f"У вас остался выбор пойти налево, прямо или сразу к логову дракона:\nВаш выбор: ")
        if str2 == "налево":
            knight["Урон"] = knight["Урон"] - 30
            print(f'Рыцарь пошёл налево и встретил девушек-цыганок. Они его обворовали и он остался без оружия. Урон рыцаря уменьшился на 30 единиц и стал равным: {knight["Урон"]}')
            str3 = input(f"У вас остался выбор пойти прямо или сразу к логову дракона(логово):\nВаш выбор: ")
            if str3 == "прямо":
                knight["Урон"] = knight["Урон"]+50
                print(f'Рыцарь пошёл прямо и попал к кузнецу. Кузнец выковал ему меч, лучше прежнего. Урон Рыцарь увеличился на 50 единиц и стал равным {knight["Урон"]}')
                print("Дальше Рыцарь направился к дракону, где началась битва.")
                war()
            elif str3 == "логово":
                print("Рыцарь направился к дракону, где началась битва.")
                war()
        elif str2 == "прямо":
            knight["Урон"] = knight["Урон"]+50
            print(f'Рыцарь пошёл прямо и попал к кузнецу. Кузнец выковал ему меч, лучше прежнего. Урон Рыцарь увеличился на 50 единиц и стал равным {knight["Урон"]}')
            str3 = input(f"У вас остался выбор пойти налево или в логово:\nВаш выбор: ")
            if str3 == "налево":
                knight["Урон"] = knight["Урон"] - 30
                print(f'Рыцарь пошёл налево и встретил девушек-цыганок. Они его обворовали и он остался без оружия. Урон рыцаря уменьшился на 30 единиц и стал равным: {knight["Урон"]}')
                print("Дальше Рыцарь направился к дракону, где началась битва.")
                war()
            elif str3 == "логово":
                print("Рыцарь направился к дракону, где началась битва.")
                war()
        elif str2 == "логово":
            print("Рыцарь направился к дракону, где началась битва.")
            war()
    elif str1 == "налево":
        knight["Урон"] = knight["Урон"] - 30
        print(f'Рыцарь пошёл налево и встретил девушек-цыганок. Они его обворовали и он остался без оружия. Урон рыцаря уменьшился на 30 единиц и стал равным: {knight["Урон"]}')
        str2 = input(f"У вас остался выбор пойти направо, прямо или в логово:\nВаш выбор: ")
        if str2 == "направо":
            knight["Здоровье"] = knight["Здоровье"]+250
            print(f'Рыцарь пошёл направо, найдя небольшую деревню, где получили хлеб с маслом и ваше здоровье увеличилось на 250 единиц и стало равным {knight["Здоровье"]}')
            str3 = input(f"У вас остался выбор пойти прямо или в логово:\nВаш выбор: ")
            if str3 == "прямо":
                knight["Урон"] = knight["Урон"]+50
                print(f'Рыцарь пошёл прямо и попал к кузнецу. Кузнец выковал ему меч, лучше прежнего. Урон Рыцарь увеличился на 50 единиц и стал равным {knight["Урон"]}')
                print("Дальше Рыцарь направился к дракону, где началась битва.")
                war()
            elif str3 == "логово":
                print("Рыцарь направился к дракону, где началась битва.")
                war()
        elif str2 == "прямо":
            knight["Урон"] = knight["Урон"]+50
            print(f'Рыцарь пошёл прямо и попал к кузнецу. Кузнец выковал ему меч, лучше прежнего. Урон Рыцарь увеличился на 50 единиц и стал равным {knight["Урон"]}')
            str3 = input(f"У вас остался выбор пойти направо или в логово:\nВаш выбор: ")
            if str3 == "направо":
                knight["Здоровье"] = knight["Здоровье"]+250
                print(f'Рыцарь пошёл направо, найдя небольшую деревню, где получили хлеб с маслом и ваше здоровье увеличилось на 250 единиц и стало равным {knight["Здоровье"]}')
                print("Дальше Рыцарь направился к дракону, где началась битва.")
                war()
        elif str2 == "логово":
            print("Рыцарь направился к дракону, где началась битва.")
            war()
    elif str1 == "прямо":
        knight["Урон"] = knight["Урон"]+50
        print(f'Рыцарь пошёл прямо и попал к кузнецу. Кузнец выковал ему меч, лучше прежнего. Урон Рыцарь увеличился на 50 единиц и стал равным {knight["Урон"]}')
        str2 = input(f"У вас остался выбор пойти направо, налево или в логово:\nВаш выбор: ")
        if str2 == "направо":
            knight["Здоровье"] = knight["Здоровье"]+250
            print(f'Рыцарь пошёл направо, найдя небольшую деревню, где получили хлеб с маслом и ваше здоровье увеличилось на 250 единиц и стало равным {knight["Здоровье"]}')
            str3 = input(f"У вас остался выбор пойти налево или в логово:\nВаш выбор: ")
            if str3 == "налево":
                knight["Урон"] = knight["Урон"] - 30
                print(f'Рыцарь пошёл налево и встретил девушек-цыганок. Они его обворовали и он остался без оружия. Урон рыцаря уменьшился на 30 единиц и стал равным: {knight["Урон"]}')
                print("Дальше Рыцарь направился к дракону, где началась битва.")
                war()
            elif str3 == "логово":
                print("Рыцарь направился к дракону, где началась битва.")
                war()
        elif str2 == "налево":
            knight["Урон"] = knight["Урон"] - 30
            print(f'Рыцарь пошёл налево и встретил девушек-цыганок. Они его обворовали и он остался без оружия. Урон рыцаря уменьшился на 30 единиц и стал равным: {knight["Урон"]}')
            str3 = input(f"У вас остался выбор пойти направо или в логово:\nВаш выбор: ")
            if str3 == "направо":
                knight["Здоровье"] = knight["Здоровье"]+250
                print(f'Рыцарь пошёл направо, найдя небольшую деревню, где получили хлеб с маслом и ваше здоровье увеличилось на 250 единиц и стало равным {knight["Здоровье"]}')
                print("Дальше Рыцарь направился к дракону, где началась битва.")
                war()
            elif str3 == "логово":
                print("Рыцарь направился к дракону, где началась битва.")
                war()
        elif str2 == "логово":
            print("Рыцарь направился к дракону, где началась битва.")
            war()
    elif str1 == "логово":
        print("Рыцарь направился к дракону, где началась битва.")
        war()

"""# Задание 3

Цель - создать менеджера команды Pokémon, который позволит пользователям:

- Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)
- Удалять покемонов из их команды.
- Просматривать подробную информацию обо всех покемонах в команде.
- Находить покемона по имени.
- Устраивать тренировочный бой между двумя покемонами

Для данной задачи используйте: https://pokeapi.co/
"""

import requests
from random import *


# функция отправки запроса
def send_requests(url):
    response = requests.get(url)
    status_code = response.status_code

    if status_code == 200:
      return response.json()
    return None


def ability(data):
    list1 = []
    for i in range(len(data["abilities"])):
      list1.append(data["abilities"][i]["ability"]["name"])
    return list1


def types(data):
    list1 = []
    for i in range(len(data["types"])):
      list1.append(data["types"][i]["type"]["name"])
    return list1


def info_name(name):
    url = f"https://pokeapi.co/api/v2/pokemon/{name}"
    data = send_requests(url)
    name = data["name"]
    weight = data["weight"]
    height = data["height"]
    abilities = ability(data)
    type1 = types(data)

    my_dict = {}
    my_dict["Тип"], my_dict["Вес"], my_dict["Рост"], my_dict["Способности"] = type1, weight, height, abilities
    inform = {}
    inform[f'{name}'] = my_dict
    return(f"Подробная информация про покемона: {inform}")





team = []
while True:
    str1 = """Это менеджер команды Pokémon, который позволяет пользователям:
1. Добавлять покемонов в свою команду. (если такого покемона еще нет в команде)
2. Удалять покемонов из их команды.
3. Просматривать подробную информацию обо всех покемонах в команде.
4. Находить покемона по имени.
5. Устраивать тренировочный бой между двумя покемонами"""
    action = input(f'{str1}\nВаш выбор: ')
    if action == "1":
        name = input("Введите имя покемона, которого хотите добавить в свою команду: ")
        if name not in team:
            team.append(name)
            print("Покемон успешно добавлен в команду.")
        else:
            print("Данный покемон уже есть в вашей команде!!!")
    elif action == "2":
        name = input("Введите имя покемона, которого хотите удалить из своей команды: ")
        if name in team:
            team.remove(name)
            print("Покемон успешно удалён из команды.")
        else:
            print("Данного покемона нет в вашей команде!!!")
    elif action == "3":
        name = input("Введите имя покемона, у которого хотите посмотреть подробную информацию: ")
        info = info_name(name)
        print(info)
    elif action == "4":
        name = input("Введите имя покемона, которого хотите найти по имени: ")
        for i in team:
            if i == name:
                print(f"Покемон, которого вы искали: {i}")
    elif action == "5":
        name1 = input("Введите имя первого покемона для тренировочного боя, который находится у вас в команде: ")
        name2 = input("Введите имя второго покемона для тренировочного боя, который находится у вас в команде: ")
        if name1 in team and name2 in team:
            numb = randint(1,2)
            if numb == 1:
                print(f"Победителем оказывается покемон с именем {name1}!!!\nК сожалению покемон {name2} потерпел поражение...")
            elif numb == 2:
                print(f"Победителем оказывается покемон с именем {name2}!!!\nК сожалению покемон {name1} потерпел поражение...")
    else:
        break