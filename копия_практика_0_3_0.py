# -*- coding: utf-8 -*-
"""Копия Практика 0.3.0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RhshekMOBnOVXLBVdjZM9FIKmnT4uJA0

ФИО
"""

Сбродов Илья Андреевич

"""**Во всей практике нельзя применять библиотеки предоставляющие готовые решения!**

# **Задача 1.**

Типы данных Напишите программу на Python, которая принимает список чисел в качестве входных данных от пользователя, а затем выводит сумму, среднее значение и максимальное значение из списка.

***Нельзя использовать: len(), min(), max(), average(), sum()***

Дано:
```
1 2 3 4 5 6 7
```
Вывод:

```
Сумма чисел: 28
Среднее арифм.: 4.0
Максимальное значение: 7
```
"""

lists = list((input()).split())
summ, lenght, maxim = 0, 0, 0
for i in lists:
    summ += int(i)
    lenght += 1
    if maxim <= int(i):
        maxim = int(i)
sr_arifm = summ/lenght
print(summ)
print(sr_arifm)
print(maxim)

"""# **Задача 2.**

Напишите программу на Python, которая принимает список слов в качестве входных данных от пользователя, а затем распечатывает список в обратном порядке.

Ввод:

```
апельсин мандарин яблоко
```

Вывод:

```
яблоко мандарин апельсин
```
"""

string = (input("Введите строке, которую хотите развернуть: ").split())[::-1]
string_reverse = [i for i in string]
print(" ".join(string_reverse))

"""# **Задача 3**

Простой чат-бот
Создайте простого чат-бота, который отвечает на основные запросы пользователей. Программа должна использовать условные выражения для определения намерений пользователя и последующего соответствующего ответа.

Чат бот может:

- помогать складывать числа
- подсказывать фильм, музыку и тд (из заранее созданного списка)
- создавать список дел (а также выводить его, обновлять, очищать)

Интерфейс чат-бота на ваше усмотрение, это могут быть как заранее определенные команды, так и к примеру вызов команды по номеру

*Реализовать без использования функций*

Пример:

Ввод:

```
Олег, какую мызыку посоветуешь?
```

Вывод:

```
Я бы посоветовал вам: Led Zeppelin Stairway to Heaven
```
"""

from random import randint
music = ["Led Zeppelin Stairway to Heaven", "That's where I am", "As it was", "Happy ending", "Til you can't", "Snow on the beach",  "Bath song", "Gangnam Style"]
films = ["Трасса 60", "Борат", "Астрал", "Убежище дьявола", "Зелёная миля", "Зелёный слоник", "Не дыши", "1+1", "Интерстеллар", "Мир Юрского Периода"]
zapros = input("Введите номер вашего запроса для бота:\n1 - Сложить числа;\n2 - подсказать фильм, музыку и т.д(из заранее созданного списка);\n3 - Создать список дел.\nВаш запрос: ")
if zapros == "1":
    numbers = list(input("Введите числа, которые хотите просуммировать через пробел: ").split())
    summ = 0
    for i in numbers:
       summ += int(i)
    print("Ваша сумма:",summ)
elif zapros == "2":
    chooice = input("Введите, что вам нужно подсказать(Фильм или Музыка) с заглавной буквы: ")
    if chooice == "Фильм":
        print("Я бы посоветовал вам фильм:", choice(films))
    elif chooice == "Музыка":
        print("Я бы посоветовал вам музыку:", choice(music))
elif zapros == "3":
    cnt = int(input("Введите количество действий, которые вы хотите произвести со своим списком дел: "))
    to_do_list = []
    for i in range(cnt):
        operation = input("Введите действие, которое хотите произвести со своим списком дел: \n1 - Вывести список дел;\n2 - Обновить список дел;\n3 - Очистить список дел.\nВаше действие: ")
        if operation == "1":
            print("Список ваших дел:",", ".join(to_do_list))
        elif operation == "2":
            to_do_list.append(input("Введите дело, которое хотите добавить в список дел: "))
        elif operation == "3":
            to_do_list.clear()
else:
    print("Запустите программу заново и введите запрос правильно!!!")

"""# **Задача 4.**

Камень, ножницы, бумага

Создайте игру в Камень, ножницы, бумагу, в которой пользователь может играть против компьютера. Программа должна запросить выбор пользователя, а затем сгенерировать выбор компьютера. Затем программа должна определить победителя на основе правил игры.

**Этап 1:**

Определение победителя

**Этап 2:**
  
Игра до 3 побед


Ввод для "Этап 1":

```
Камень
```

Вывод:

```
Компьютер: Ножницы
Игрок: Камень
Победа: Игрок
```
"""

from random import *
game = ["Камень", "Ножницы", "Бумага"]
count_win = input("Введите количество побед, до которых вы будете играть(1/3): ")
if count_win == "1":
    your = input("Введите ваш выбор из списка Камень/Ножницы/Бумага: ")
    comp = choice(game)
    print("Игрок:", your)
    print("Компьютер:", comp)
    if your == "Камень":
        if comp == "Камень":
            print("У вас ничья")
        if comp == "Ножницы":
            print("Победа: Игрок")
        elif comp == "Бумага":
            print("Победа: Компьютер")
    if your == "Ножницы":
        if comp == "Ножницы":
            print("У вас ничья")
        if comp == "Бумага":
            print("Победа: Игрок")
        elif comp == "Камень":
            print("Победа: Компьютер")
    if your == "Бумага":
        if comp == "Бумага":
            print("У вас ничья")
        if comp == "Камень":
            print("Победа: Игрок")
        elif comp == "Ножницы":
            print("Победа: Компьютер")
elif count_win == "3":
    win_your, win_comp = 0, 0
    while win_your != 3 and win_comp != 3:
        print("Вы", win_your, ":", win_comp, "Комп")
        your = input("Введите ваш выбор из списка Камень/Ножницы/Бумага: ")
        comp = choice(game)
        print("Игрок:", your)
        print("Компьютер:", comp)
        if win_your != 3 and win_comp != 3:
            if your == "Камень":
                if comp == "Ножницы":
                    win_your += 1
                elif comp == "Бумага":
                    win_comp += 1
            if your == "Ножницы":
                if comp == "Бумага":
                    win_your += 1
                elif comp == "Камень":
                    win_comp += 1
            if your == "Бумага":
                if comp == "Камень":
                    win_your += 1
                elif comp == "Ножницы":
                    win_comp += 1
    if win_your == 3:
        print("Вы победили!!")
    else:
        print("Компьютер победил")

"""# **Задача 5.**

Создайте игру "Палач" или "Виселица", в которой пользователь должен угадать слово, предлагая буквы. Программа должна выбрать случайное слово, а затем разрешить пользователю угадывать буквы. После каждого угадывания программа должна сообщать пользователю, есть ли в слове буква или нет.

**Этап 1**
Создать саму игру

**Этап 2:**
Ввести подсчет количества очков и ограничения на попытки

**Этап 3:** Добавить возможность сразу угадать слово
"""

import random


words = ['питон', 'урфу', 'ртф', 'программирование']

secret_word = random.choice(words)
displayed = ['_'] * len(secret_word)
attempts = 10

print('Добро пожаловать в игру "Виселица"!')

while attempts > 0 and '_' in displayed:
    print('\nСлово: ', ' '.join(displayed))
    print(f'Осталось попыток: {attempts}')
    zapros = input("Можете ли вы ввести слово целиком?\n(Да/Нет): ")
    if zapros == ("Да"):
        slovo = input("Введите данное слово: ")
        if slovo == secret_word:
            displayed.clear()
        else:
            break
    else:
        guess = input('Введите букву: ').lower()

        if len(guess) != 1 or not guess.isalpha():
            print('Пожалуйста, введите одну букву алфавита.')
            continue

        if guess in secret_word:
            for i, letter in enumerate(secret_word):
                if letter == guess:
                    displayed[i] = letter
        else:
            print('Неверно! Такой буквы нет в слове.')
            attempts -= 1

        if guess in displayed:
            print('Вы угадали эту букву.')

if '_' not in displayed:
    print('\nПоздравляем, вы угадали слово!')
else:
    print('\nК сожалению, ваши попытки закончились/Вы назвали слово неправильно. Игра окончена.')

print(f'Секретное слово было: "{secret_word}"')

"""# **Дополнительно: Задача 6.**

**Цифра на определенном месте:**

Последовательно записан натуральный ряд чисел.

Какая цифра стоит в N позиции


Вввод:

```
Введите номер позиции: 1234567890
```

Вывод:

```
8
```
"""

